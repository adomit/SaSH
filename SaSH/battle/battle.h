#pragma once

enum class BattleActtype //BattleActionType
{
	kNotUsed,
	kChar,
	kItem,
	kMagic,
	kSkill,
	kPet,
};

enum class BattleOp //BattleOperator
{
	kNotUsed,
	kEqual,
	kNotEqual,
	kGreater,
	kGreaterEqual,
	kLess,
	kLessEqual,
	kContains,
	kNotContains,
};

enum class BattleConditionLeft //BattleCondition
{
	kNotUsed,
	kCharName,
	kCharFreeName,
	kCharLevel,
	kCharHp,
	kCharMaxHp,
	kCharHPP,
	kCharMp,
	kCharMaxMp,
	kCharMPP,
	kCharExp,
	kCharMaxExp,
	kCharStone,
	kCharVit,
	kCharStr,
	kCharTgh,
	kCharDex,
	kCharAtk,
	kCharDef,
	kCharAgi,
	kCharChasma,
	kCharTurn,
	kCharEarth,
	kCharWater,
	kCharFire,
	kCharWind,

	kPetName,
	kPetFreeName,
	kPetLevel,
	kPetHp,
	kPetMaxHp,
	kPetHPP,
	kPetExp,
	kPetMaxExp,
	kPetAtk,
	kPetDef,
	kPetAgi,
	kPetLoyal,
	kPetTurn,
	kPetState,
	kPetEarth,
	kPetWater,
	kPetFire,
	kPetWind,
	kPetPower,

	kTeamName,
	kTeamLevel,
	kTeamHp,
	kTeamMaxHp,
	kTeamHPP,
	kTeamMp,

	kEnemyName,
	kEnemyFreeName,
	kEnemyModelId,
	kEnemyLevel,
	kEnemyHp,
	kEnemyMaxHp,
	kEnemyHPP,
	kEnemyStatus,
	kEnemyRideFlag,
	kEnemyRideName,
	kEnemyRideLevel,
	kEnemyRideHp,
	kEnemyRideMaxHp,
	kEnemyRideHPP,

	kRound,
	kField,
	kDuration,
	kTotalDuration,
	kTotalCombat,
};